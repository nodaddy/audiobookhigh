{"ast":null,"code":"var _jsxFileName = \"/home/neilsting/Desktop/audiobookheaven/webapp/src/components/ReadRoom.js\";\nimport React, { Component } from 'react';\nimport './ReadRoom.css';\nimport axios from 'axios';\n\nclass ReadRoom extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dictioanryRes: [],\n      showDicRes: false,\n      oneElementArray: [1]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 22\n      }\n    }, \"Dictionary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      align: \"center\",\n      id: `englishword${this.props.id}`,\n      style: {\n        marginBottom: '10px',\n        padding: '7px',\n        width: '100%',\n        border: '0px',\n        backgroundColor: 'black',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        border: '1px solid black',\n        borderRadius: '5px'\n      },\n      onClick: () => {\n        document.getElementById(`nounload${this.props.id}`).style.display = 'block';\n        document.getElementById(`dictionary${this.props.id}`).style.display = 'block';\n        axios.get(`https://api.dictionaryapi.dev/api/v1/entries/en/${document.getElementById(`englishword${this.props.id}`).value}`).then(response => {\n          this.setState({\n            showDicRes: true,\n            dictioanryRes: response\n          }); //console.log(this.state.showDicRes);\n          //  console.log(JSON.stringify(this.state.dictioanryRes.data[0].meaning, null, \"\\t\"));\n          // this.setState({showDicRes:true});\n        }).catch(err => {\n          console.log(err);\n          alert('sorry! could not find the word'); // document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n\n          document.getElementById(`dictionary${this.props.id}`).style.display = 'none';\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      align: \"right\",\n      style: {\n        display: 'none',\n        border: '3px solid #f3f3f3',\n\n        /* Light grey */\n        borderTop: ' 3px solid #0c0c0c',\n\n        /* Blue */\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        animation: 'spin 2s linear infinite'\n      },\n      id: `nounload${this.props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      align: \"left\",\n      id: `dictionary${this.props.id}`,\n      style: {\n        zIndex: '999999',\n        backgroundColor: 'white',\n        position: 'absolute',\n        padding: '3px',\n        width: '100%',\n        height: '70vh',\n        border: '1px solid black',\n        borderRadius: '5px',\n        fontSize: '11px',\n        display: 'none',\n        overflow: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closedict\",\n      style: {\n        border: '1px solid black'\n      },\n      onClick: () => {\n        document.getElementById(`dictionary${this.props.id}`).style.display = 'none';\n        this.setState({\n          showDicRes: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \" Close dictionary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, \"Meaning in JSON format\", this.state.showDicRes == true ? this.state.dictioanryRes.data[0].meaning ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, this.state.oneElementArray.map(l => {\n      document.getElementById(`nounload${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 44\n        }\n      }, JSON.stringify(this.state.dictioanryRes.data[0].meaning, null, \"\\t\"));\n    })) : this.state.oneElementArray.map((verb, index) => {\n      document.getElementById(`nounload${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 44\n        }\n      }, \"Not a noun\");\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }\n    }, \" \")))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        height: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      id: `view${this.props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      id: \"notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Make Notes\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"notetextarea\",\n      style: {\n        padding: '10px',\n        fontSize: '13px',\n        backgroundColor: 'black',\n        width: '100%',\n        color: 'white',\n        height: '100%'\n      },\n      onChange: () => {//save notes in the data base\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, this.props.id))));\n  }\n\n}\n\nexport default ReadRoom;","map":{"version":3,"sources":["/home/neilsting/Desktop/audiobookheaven/webapp/src/components/ReadRoom.js"],"names":["React","Component","axios","ReadRoom","state","dictioanryRes","showDicRes","oneElementArray","render","height","marginBottom","props","id","padding","width","border","backgroundColor","color","borderRadius","document","getElementById","style","display","get","value","then","response","setState","catch","err","console","log","alert","borderTop","animation","zIndex","position","fontSize","overflow","data","meaning","whiteSpace","map","l","JSON","stringify","verb","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ReadRoom.css'\nimport axios from 'axios'\n\nclass ReadRoom extends React.Component {\n\n    state={\n        dictioanryRes: [],\n        showDicRes: false,\n        oneElementArray:[1]\n    }\n\n    render(){\n        return(\n            <div className='col-sm-12' style={{height:'100%'}}>\n                 <div className=\"row\">\n                     <div className=\"col-sm-12\">\n                     <h6>Dictionary</h6>\n                     <div className=\"row\" style={{marginBottom:'10px'}}>\n                         <div className=\"col-sm-3\">\n                     <input align=\"center\" id={`englishword${this.props.id}`} style={{ marginBottom:'10px',padding:'7px',width:'100%',border:'0px', backgroundColor:'black', color:'white'}}>\n                         \n                         </input><br/>\n               </div>\n               <div className=\"col-sm-3\">\n                <button style={{border:'1px solid black', borderRadius:'5px'}} onClick={()=>{\n                    document.getElementById(`nounload${this.props.id}`).style.display = 'block'; \n                 \n                     document.getElementById(`dictionary${this.props.id}`).style.display='block';\n                     \n                  axios.get(`https://api.dictionaryapi.dev/api/v1/entries/en/${document.getElementById(`englishword${this.props.id}`).value}`)\n                    .then(response => {\n                        this.setState({showDicRes:true, dictioanryRes:response});\n                        //console.log(this.state.showDicRes);\n                      //  console.log(JSON.stringify(this.state.dictioanryRes.data[0].meaning, null, \"\\t\"));\n                       // this.setState({showDicRes:true});\n                    })\n                    .catch(err => {\n                        console.log(err);\n                        alert('sorry! could not find the word');\n                     // document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n                     document.getElementById(`dictionary${this.props.id}`).style.display='none';\n                    });\n                }}>Search</button>\n\n                </div>\n\n                <div className=\"col-sm-6\"><span align=\"right\" style={{\n                                    display:'none',\n                                   \n                                    border: '3px solid #f3f3f3', /* Light grey */\n                                    borderTop:' 3px solid #0c0c0c', /* Blue */\n                                    borderRadius: '50%',\n                                    width: '25px',\n                                    height: '25px',\n                                    animation:'spin 2s linear infinite',\n                                   \n                                  \n                                }} id={`nounload${this.props.id}`}></span></div>\n                </div>\n                <div className=\"row\" align=\"left\" id={`dictionary${this.props.id}`} \n                style={{zIndex:'999999',\n                backgroundColor:'white',\n                position:'absolute',\n                padding:'3px',\n                width:'100%',\n                height:'70vh',\n                border:'1px solid black', \n                borderRadius:'5px', \n                fontSize:'11px',\n                display:'none',\n                overflow:'scroll'}}>\n                <button className=\"closedict\" style={{border:'1px solid black'}} onClick={()=>{\n                        document.getElementById(`dictionary${this.props.id}`).style.display='none';\n                        this.setState({showDicRes:false});\n                    }}> Close dictionary</button>\n                    <div className=\"col-sm-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\" align=\"center\">\n\n                                <div align=\"left\">\n                                Meaning in JSON format\n                                \n                               \n                                {   \n                                    this.state.showDicRes == true ?\n                                    this.state.dictioanryRes.data[0].meaning?\n                                    <div style={{whiteSpace:'pre-wrap'}}>{this.state.oneElementArray.map((l)=>{\n                                    document.getElementById(`nounload${this.props.id}`).style.display = 'none';\n                                    return <div>{JSON.stringify(this.state.dictioanryRes.data[0].meaning, null, \"\\t\")}</div> \n                                })}</div>\n                        :this.state.oneElementArray.map((verb, index)=>{\n                                    document.getElementById(`nounload${this.props.id}`).style.display = 'none'; \n                     \n                                    return <div style={{fontSize:'12px'}}>Not a noun</div>\n                                }):<div> {/*dictionary laoder animation*/}</div>}\n                             </div>\n                            </div>\n                        </div>\n          \n                    </div>\n                    \n                    </div>\n                     </div>\n                 </div>\n                 \n                  <div className=\"row\" style={{height:'70%'}}>   \n                <div className=\"col-sm-3\" id={`view${this.props.id}`}>\n<br/>            \n               \n                 \n\n                    \n                    \n                   \n                </div>\n                \n              \n\n                <div className=\"col-sm-9\" id=\"notes\">\n                <h6>Make Notes</h6>\n                    <textarea id=\"notetextarea\" style={{padding:'10px' , fontSize:'13px',backgroundColor:'black', width:'100%', color:'white',height:'100%'}} \n                    onChange={()=>{\n                        //save notes in the data base\n                    }}\n                    >{this.props.id}</textarea>\n                     \n                </div>\n                \n                </div>\n \n            </div>\n        )\n    }\n}\n\nexport default ReadRoom;"]},"metadata":{},"sourceType":"module"}