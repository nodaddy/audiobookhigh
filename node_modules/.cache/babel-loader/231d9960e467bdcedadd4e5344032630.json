{"ast":null,"code":"var _jsxFileName = \"/home/neilsting/Desktop/audiobookheaven/webapp/src/components/ReadRoom.js\";\nimport React, { Component } from 'react';\nimport './ReadRoom.css';\nimport axios from 'axios';\n\nclass ReadRoom extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dictioanryRes: [],\n      showDicRes: false,\n      oneElementArray: [1]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 22\n      }\n    }, \"Dictionary\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      align: \"center\",\n      id: `englishword${this.props.id}`,\n      style: {\n        marginBottom: '10px',\n        padding: '7px',\n        width: '100%',\n        border: '0px',\n        backgroundColor: 'black',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        border: '1px solid black',\n        borderRadius: '5px'\n      },\n      onClick: () => {\n        document.getElementById(`nounload${this.props.id}`).style.display = 'block';\n        document.getElementById(`verbload${this.props.id}`).style.display = 'block';\n        document.getElementById(`dictionary${this.props.id}`).style.display = 'block';\n        axios.get(`https://api.dictionaryapi.dev/api/v1/entries/en/${document.getElementById(`englishword${this.props.id}`).value}`).then(response => {\n          this.setState({\n            showDicRes: true,\n            dictioanryRes: response\n          });\n          console.log(this.state.showDicRes);\n          console.log(this.state.dictioanryRes); // this.setState({showDicRes:true});\n        }).catch(err => {\n          console.log(\"Dgsd\");\n          alert('sorry! could not find the word'); // document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n          // document.getElementById(`dictionary${this.props.id}`).style.display='none';\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      align: \"left\",\n      id: `dictionary${this.props.id}`,\n      style: {\n        zIndex: '999999',\n        backgroundColor: 'white',\n        position: 'absolute',\n        padding: '3px',\n        width: '100%',\n        border: '1px solid black',\n        borderRadius: '5px',\n        fontSize: '12px',\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, \"As a noun:\", /*#__PURE__*/React.createElement(\"span\", {\n      align: \"right\",\n      style: {\n        display: 'none',\n        border: '3px solid #f3f3f3',\n\n        /* Light grey */\n        borderTop: ' 3px solid #0c0c0c',\n\n        /* Blue */\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        animation: 'spin 2s linear infinite'\n      },\n      id: `nounload${this.props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }), this.state.showDicRes == true ? this.state.dictioanryRes.data[0].meaning.noun ? this.state.dictioanryRes.data[0].meaning.noun.map((noun, index) => {\n      document.getElementById(`nounload${this.props.id}`).style.display = 'none';\n      document.getElementById(`verbload${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'rgb(52, 201, 52)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 75\n        }\n      }, index + 1, \" \"), noun.definition, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 150\n        }\n      }));\n    }) : this.state.oneElementArray.map((verb, index) => {\n      document.getElementById(`nounload${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }\n      }, \"Not a noun\");\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }\n    }, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"As a verb\", /*#__PURE__*/React.createElement(\"span\", {\n      align: \"right\",\n      style: {\n        display: 'none',\n        border: '3px solid #f3f3f3',\n\n        /* Light grey */\n        borderTop: ' 3px solid #0c0c0c',\n\n        /* Blue */\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        animation: 'spin 2s linear infinite'\n      },\n      id: `verbload${this.props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 66\n      }\n    }), this.state.showDicRes == true ? this.state.dictioanryRes.data[0].meaning.verb ? this.state.dictioanryRes.data[0].meaning.verb.map((verb, index) => {\n      document.getElementsByClassName(`dictloader${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: 'rgb(52, 201, 52)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 75\n        }\n      }, index + 1, \" \"), verb.definition, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 150\n        }\n      }));\n    }) : this.state.oneElementArray.map((verb, index) => {\n      document.getElementById(`verbload${this.props.id}`).style.display = 'none';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 44\n        }\n      }, \"Not a verb\");\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 36\n      }\n    }, \" \")))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"closedict\",\n      style: {\n        border: '1px solid black'\n      },\n      onClick: () => {\n        document.getElementById(`dictionary${this.props.id}`).style.display = 'none';\n        this.setState({\n          showDicRes: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \" Close dictionary\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        height: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-3\",\n      id: `view${this.props.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-9\",\n      id: \"notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Make Notes\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"notetextarea\",\n      style: {\n        padding: '10px',\n        fontSize: '13px',\n        backgroundColor: 'black',\n        width: '100%',\n        color: 'white',\n        height: '100%'\n      },\n      onChange: () => {//save notes in the data base\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, this.props.id))));\n  }\n\n}\n\nexport default ReadRoom;","map":{"version":3,"sources":["/home/neilsting/Desktop/audiobookheaven/webapp/src/components/ReadRoom.js"],"names":["React","Component","axios","ReadRoom","state","dictioanryRes","showDicRes","oneElementArray","render","height","marginBottom","props","id","padding","width","border","backgroundColor","color","borderRadius","document","getElementById","style","display","get","value","then","response","setState","console","log","catch","err","alert","zIndex","position","fontSize","borderTop","animation","data","meaning","noun","map","index","definition","verb","getElementsByClassName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ReadRoom.css'\nimport axios from 'axios'\n\nclass ReadRoom extends React.Component {\n\n    state={\n        dictioanryRes: [],\n        showDicRes: false,\n        oneElementArray:[1]\n    }\n\n    render(){\n        return(\n            <div className='col-sm-12' style={{height:'100%'}}>\n                 <div className=\"row\">\n                     <div className=\"col-sm-12\">\n                     <h6>Dictionary</h6>\n                     <div className=\"row\" style={{marginBottom:'10px'}}>\n                         <div className=\"col-sm-3\">\n                     <input align=\"center\" id={`englishword${this.props.id}`} style={{ marginBottom:'10px',padding:'7px',width:'100%',border:'0px', backgroundColor:'black', color:'white'}}>\n                         \n                         </input><br/>\n               </div>\n               <div className=\"col-sm-3\">\n                <button style={{border:'1px solid black', borderRadius:'5px'}} onClick={()=>{\n                    document.getElementById(`nounload${this.props.id}`).style.display = 'block'; \n                    document.getElementById(`verbload${this.props.id}`).style.display = 'block'; \n                     document.getElementById(`dictionary${this.props.id}`).style.display='block';\n                     \n                  axios.get(`https://api.dictionaryapi.dev/api/v1/entries/en/${document.getElementById(`englishword${this.props.id}`).value}`)\n                    .then(response => {\n                        this.setState({showDicRes:true, dictioanryRes:response});\n                        console.log(this.state.showDicRes);\n                        console.log(this.state.dictioanryRes);\n                       // this.setState({showDicRes:true});\n                    })\n                    .catch(err => {\n                        console.log(\"Dgsd\");\n                        alert('sorry! could not find the word');\n                     // document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n                    // document.getElementById(`dictionary${this.props.id}`).style.display='none';\n                    });\n                }}>Search</button>\n                </div>\n\n                <div className=\"col-sm-6\"></div>\n                </div>\n                <div className=\"row\" align=\"left\" id={`dictionary${this.props.id}`} style={{zIndex:'999999',backgroundColor:'white',position:'absolute',padding:'3px',width:'100%', border:'1px solid black', borderRadius:'5px', fontSize:'12px',display:'none'}}>\n                    <div className=\"col-sm-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\" align=\"center\">\n\n                                <div align=\"left\">\n                                As a noun:\n                                <span align=\"right\" style={{\n                                    display:'none',\n                                   \n                                    border: '3px solid #f3f3f3', /* Light grey */\n                                    borderTop:' 3px solid #0c0c0c', /* Blue */\n                                    borderRadius: '50%',\n                                    width: '25px',\n                                    height: '25px',\n                                    animation:'spin 2s linear infinite',\n                                   \n                                  \n                                }} id={`nounload${this.props.id}`}></span>\n                               \n                                {   \n                                    this.state.showDicRes == true ?\n                                    this.state.dictioanryRes.data[0].meaning.noun?\n                                    this.state.dictioanryRes.data[0].meaning.noun.map((noun, index)=>{\n                                    document.getElementById(`nounload${this.props.id}`).style.display = 'none'; \n                                    document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n\n                                    return <div style={{fontSize:'12px'}}><span style={{color:'rgb(52, 201, 52)'}}>{index+1} </span>{noun.definition}<br/></div>\n                                }):this.state.oneElementArray.map((verb, index)=>{\n                                    document.getElementById(`nounload${this.props.id}`).style.display = 'none'; \n                     \n                                    return <div style={{fontSize:'12px'}}>Not a noun</div>\n                                }):<div> {/*dictionary laoder animation*/}</div>}\n                             </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                As a verb\n                                {/*dictionary laoder animation*/}<span align=\"right\" style={{\n                                    display:'none',\n                                   \n                                    border: '3px solid #f3f3f3', /* Light grey */\n                                    borderTop:' 3px solid #0c0c0c', /* Blue */\n                                    borderRadius: '50%',\n                                    width: '25px',\n                                    height: '25px',\n                                    animation:'spin 2s linear infinite',\n                                   \n                                  \n                                }} id={`verbload${this.props.id}`}></span>\n                                {   \n                                    this.state.showDicRes == true ?\n                                    this.state.dictioanryRes.data[0].meaning.verb ?\n                                    this.state.dictioanryRes.data[0].meaning.verb.map((verb, index)=>{\n                                    document.getElementsByClassName(`dictloader${this.props.id}`).style.display = 'none'; \n\n                                    return <div style={{fontSize:'12px'}}><span style={{color:'rgb(52, 201, 52)'}}>{index+1} </span>{verb.definition}<br/></div>\n                                }):         this.state.oneElementArray.map((verb, index)=>{\n                                    document.getElementById(`verbload${this.props.id}`).style.display = 'none'; \n                     \n                                    return <div style={{fontSize:'12px'}}>Not a verb</div>\n                                }):<div> </div>}\n                            </div>\n                        </div>\n                    </div>\n                    <button className=\"closedict\" style={{border:'1px solid black'}} onClick={()=>{\n                        document.getElementById(`dictionary${this.props.id}`).style.display='none';\n                        this.setState({showDicRes:false});\n                    }}> Close dictionary</button>\n                    </div>\n                     </div>\n                 </div>\n                 \n                  <div className=\"row\" style={{height:'70%'}}>   \n                <div className=\"col-sm-3\" id={`view${this.props.id}`}>\n<br/>            \n               \n                 \n\n                    \n                    \n                   \n                </div>\n                \n              \n\n                <div className=\"col-sm-9\" id=\"notes\">\n                <h6>Make Notes</h6>\n                    <textarea id=\"notetextarea\" style={{padding:'10px' , fontSize:'13px',backgroundColor:'black', width:'100%', color:'white',height:'100%'}} \n                    onChange={()=>{\n                        //save notes in the data base\n                    }}\n                    >{this.props.id}</textarea>\n                     \n                </div>\n                \n                </div>\n \n            </div>\n        )\n    }\n}\n\nexport default ReadRoom;"]},"metadata":{},"sourceType":"module"}